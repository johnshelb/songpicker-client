{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/App.js\";\nimport React from 'react';\nimport CurrentSong from './components/CurrentSong';\nimport AddSong from './components/AddSong';\nimport FullList from './components/FullList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  function upYours() {\n    console.log('fuck you');\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log('ubmiti'); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    let songTitle = document.getElementById('addedSong').value;\n    const newSong = {\n      name: songTitle,\n      count: 0\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newSong)\n    }).catch(error => {\n      window.alert(error);\n    });\n    window.alert(`You have added ${newSong.name} to the list`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CurrentSong, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddSong, {\n      sbmt: upYours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CurrentSong","AddSong","FullList","App","upYours","console","log","onSubmit","e","preventDefault","songTitle","document","getElementById","value","newSong","name","count","fetch","method","headers","body","JSON","stringify","catch","error","window","alert"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/App.js"],"sourcesContent":["import React from 'react';\nimport CurrentSong from './components/CurrentSong';\nimport AddSong from './components/AddSong';\nimport FullList from './components/FullList';\n\nexport default function App(){\n\n  function upYours(){\n    console.log('fuck you')\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log('ubmiti');\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    let songTitle= document.getElementById('addedSong').value\n    const newSong = {\n      name:songTitle,\n      count:0\n    };\n\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newSong),\n    })\n    .catch(error => {\n      window.alert(error);\n    });\n\n    window.alert(`You have added ${newSong.name} to the list`)\n  }\n  return(\n    <>\n      <CurrentSong />\n      <AddSong sbmt={upYours}/>\n      <FullList />\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,eAAe,SAASC,GAAT,GAAc;EAE3B,SAASC,OAAT,GAAkB;IAChBC,OAAO,CAACC,GAAR,CAAY,UAAZ;EACD;;EACD,eAAeC,QAAf,CAAwBC,CAAxB,EAA2B;IACzBA,CAAC,CAACC,cAAF;IACAJ,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFyB,CAGzB;;IACA,IAAII,SAAS,GAAEC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAApD;IACA,MAAMC,OAAO,GAAG;MACdC,IAAI,EAACL,SADS;MAEdM,KAAK,EAAC;IAFQ,CAAhB;IAMA,MAAMC,KAAK,CAAC,kCAAD,EAAqC;MAC9CC,MAAM,EAAE,MADsC;MAE9CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFqC;MAK9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;IALwC,CAArC,CAAL,CAOLS,KAPK,CAOCC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAP,CAAaF,KAAb;IACD,CATK,CAAN;IAWAC,MAAM,CAACC,KAAP,CAAc,kBAAiBZ,OAAO,CAACC,IAAK,cAA5C;EACD;;EACD,oBACE;IAAA,wBACE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,IAAI,EAAEX;IAAf;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;KApCuBD,G"},"metadata":{},"sourceType":"module"}