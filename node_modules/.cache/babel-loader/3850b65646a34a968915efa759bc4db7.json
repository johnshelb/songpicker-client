{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSong() {\n  _s();\n\n  //logic here to hit database, find a song that meets the rotation criterion and save it to the variable\n  /////////\n  const [title, newTitle] = useState('Let me see...');\n\n  function getSong() {\n    console.log(title);\n    let songList = {\n      'a': 1,\n      'b': 1,\n      'c': 1,\n      'd': 1\n    }; //hitDatabase.grabData().ParseAsObject()//?????????????????????????\n\n    const songs = Object.keys(songList); //continue the process as long as there is at least 1 song with fewer than 4 plays\n\n    while (Math.min(...Object.values(songList)) < 4) {\n      let index = Math.floor(Math.random() * songs.length);\n      let ti = songs[index];\n\n      if (songList[ti] < 4) {\n        songList[ti] += 1; //  updateDataBase(title or songList?)//?????????????????????\n\n        newTitle(p => ti);\n        return;\n      }\n    }\n\n    for (let song in songList) {\n      songList[song] = 0;\n    } //  updateDataBase(title or songList?)//?????????????????????\n\n\n    getSong();\n  } ////////////\n\n\n  let song1 = getSong();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"next\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getSong\",\n      onClick: getSong,\n      children: \"What Song to Play Next?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSong, \"fkWVIRYkzSKDjxvWC1oYOHX5NIc=\");\n\n_c = CurrentSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSong\");","map":{"version":3,"names":["React","useState","CurrentSong","title","newTitle","getSong","console","log","songList","songs","Object","keys","Math","min","values","index","floor","random","length","ti","p","song","song1"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function CurrentSong(){\n  //logic here to hit database, find a song that meets the rotation criterion and save it to the variable\n\n/////////\nconst [title,newTitle] = useState('Let me see...')\n  function getSong(){\n    console.log(title)\n    let songList = {'a':1,'b':1,'c':1,'d':1}//hitDatabase.grabData().ParseAsObject()//?????????????????????????\n    const songs = Object.keys(songList);\n  //continue the process as long as there is at least 1 song with fewer than 4 plays\n    while(Math.min(...Object.values(songList))<4){\n      let index = Math.floor(Math.random() * songs.length)\n      let ti = songs[index]\n      if(songList[ti] < 4){\n        songList[ti]+=1;\n\n    //  updateDataBase(title or songList?)//?????????????????????\n              newTitle(p=>ti)\n              return;\n      }\n    }\n    for(let song in songList){\n      songList[song]=0\n    }\n  //  updateDataBase(title or songList?)//?????????????????????\n\n    getSong()\n  }\n\n\n  ////////////\n\n\n\n  let song1 = getSong()\n  return(\n    <div className = 'next'>\n      <button id='getSong' onClick={getSong}>What Song to Play Next?</button>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,WAAT,GAAsB;EAAA;;EACnC;EAEF;EACA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,eAAD,CAAjC;;EACE,SAASI,OAAT,GAAkB;IAChBC,OAAO,CAACC,GAAR,CAAYJ,KAAZ;IACA,IAAIK,QAAQ,GAAG;MAAC,KAAI,CAAL;MAAO,KAAI,CAAX;MAAa,KAAI,CAAjB;MAAmB,KAAI;IAAvB,CAAf,CAFgB,CAEwB;;IACxC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,QAAZ,CAAd,CAHgB,CAIlB;;IACE,OAAMI,IAAI,CAACC,GAAL,CAAS,GAAGH,MAAM,CAACI,MAAP,CAAcN,QAAd,CAAZ,IAAqC,CAA3C,EAA6C;MAC3C,IAAIO,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,MAAL,KAAgBR,KAAK,CAACS,MAAjC,CAAZ;MACA,IAAIC,EAAE,GAAGV,KAAK,CAACM,KAAD,CAAd;;MACA,IAAGP,QAAQ,CAACW,EAAD,CAAR,GAAe,CAAlB,EAAoB;QAClBX,QAAQ,CAACW,EAAD,CAAR,IAAc,CAAd,CADkB,CAGtB;;QACUf,QAAQ,CAACgB,CAAC,IAAED,EAAJ,CAAR;QACA;MACP;IACF;;IACD,KAAI,IAAIE,IAAR,IAAgBb,QAAhB,EAAyB;MACvBA,QAAQ,CAACa,IAAD,CAAR,GAAe,CAAf;IACD,CAlBe,CAmBlB;;;IAEEhB,OAAO;EACR,CA3BkC,CA8BnC;;;EAIA,IAAIiB,KAAK,GAAGjB,OAAO,EAAnB;EACA,oBACE;IAAK,SAAS,EAAG,MAAjB;IAAA,wBACE;MAAQ,EAAE,EAAC,SAAX;MAAqB,OAAO,EAAEA,OAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKF;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAzCuBD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}