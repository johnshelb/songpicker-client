{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSong() {\n  _s();\n\n  const [title, newTitle] = useState('Let me see...');\n\n  async function getSong() {\n    const response = await fetch(`http://localhost:5000/record/`);\n\n    if (!response.ok) {\n      const message = `An error occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    const songList = await response.json(); // const songs = []\n    // for(let i = 0; i < songList.length; i++){\n    //   songs.push(songList[i].name)\n    // }\n    //continue the process as long as there is at least 1 song with fewer than 4 plays\n\n    const eligibleSongs = songList.map(song => {\n      if (song.count < 4) {\n        return song;\n      }\n    }).filter(el => el != undefined);\n    console.log(eligibleSongs);\n\n    if (eligibleSongs.length > 0) {\n      let index = Math.floor(Math.random() * eligibleSongs.length);\n      let ti = eligibleSongs[index].name; //  updateDataBase(title or songList?)//?????????????????????\n\n      newTitle(ti);\n      console.log('okay, I am returning');\n      return;\n    } else {\n      for (let song in songList) {\n        song.count = 0;\n      } //  updateDataBase(title or songList?)//?????????????????????\n\n\n      getSong();\n    }\n  }\n\n  getSong();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"next\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getSong\",\n      onClick: getSong,\n      children: \"What Song to Play Next?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSong, \"fkWVIRYkzSKDjxvWC1oYOHX5NIc=\");\n\n_c = CurrentSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSong\");","map":{"version":3,"names":["React","useState","CurrentSong","title","newTitle","getSong","response","fetch","ok","message","statusText","window","alert","songList","json","eligibleSongs","map","song","count","filter","el","undefined","console","log","length","index","Math","floor","random","ti","name"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function CurrentSong(){\n  const [title,newTitle] = useState('Let me see...')\n\n  async function getSong(){\n    const response = await fetch(`http://localhost:5000/record/`)\n    if (!response.ok) {\n      const message = `An error occurred: ${response.statusText}`;\n      window.alert(message);\n      return;\n    }\n    const songList = await response.json()\n    // const songs = []\n    // for(let i = 0; i < songList.length; i++){\n    //   songs.push(songList[i].name)\n    // }\n  //continue the process as long as there is at least 1 song with fewer than 4 plays\n    const eligibleSongs = songList.map(song=>{\n        if(song.count<4){\n          return song;\n        }\n      }).filter(el=>el!=undefined)\n      console.log(eligibleSongs)\n\n    if(eligibleSongs.length > 0){\n      let index = Math.floor(Math.random() * eligibleSongs.length)\n      let ti = eligibleSongs[index].name\n\n    //  updateDataBase(title or songList?)//?????????????????????\n        newTitle(ti)\n        console.log('okay, I am returning')\n        return;\n      }else{\n        for(let song in songList){\n          song.count=0\n        }\n  //  updateDataBase(title or songList?)//?????????????????????\n         getSong()\n      }\n    }\n\n  getSong()\n  return(\n    <div className = 'next'>\n      <button id='getSong' onClick={ getSong }>What Song to Play Next?</button>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,WAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,eAAD,CAAjC;;EAEA,eAAeI,OAAf,GAAwB;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAAF,CAA5B;;IACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;MAChB,MAAMC,OAAO,GAAI,sBAAqBH,QAAQ,CAACI,UAAW,EAA1D;MACAC,MAAM,CAACC,KAAP,CAAaH,OAAb;MACA;IACD;;IACD,MAAMI,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAvB,CAPsB,CAQtB;IACA;IACA;IACA;IACF;;IACE,MAAMC,aAAa,GAAGF,QAAQ,CAACG,GAAT,CAAaC,IAAI,IAAE;MACrC,IAAGA,IAAI,CAACC,KAAL,GAAW,CAAd,EAAgB;QACd,OAAOD,IAAP;MACD;IACF,CAJmB,EAIjBE,MAJiB,CAIVC,EAAE,IAAEA,EAAE,IAAEC,SAJE,CAAtB;IAKEC,OAAO,CAACC,GAAR,CAAYR,aAAZ;;IAEF,IAAGA,aAAa,CAACS,MAAd,GAAuB,CAA1B,EAA4B;MAC1B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,aAAa,CAACS,MAAzC,CAAZ;MACA,IAAIK,EAAE,GAAGd,aAAa,CAACU,KAAD,CAAb,CAAqBK,IAA9B,CAF0B,CAI5B;;MACI1B,QAAQ,CAACyB,EAAD,CAAR;MACAP,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACA;IACD,CARH,MAQO;MACH,KAAI,IAAIN,IAAR,IAAgBJ,QAAhB,EAAyB;QACvBI,IAAI,CAACC,KAAL,GAAW,CAAX;MACD,CAHE,CAIT;;;MACOb,OAAO;IACT;EACF;;EAEHA,OAAO;EACP,oBACE;IAAK,SAAS,EAAG,MAAjB;IAAA,wBACE;MAAQ,EAAE,EAAC,SAAX;MAAqB,OAAO,EAAGA,OAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKF;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA/CuBD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}