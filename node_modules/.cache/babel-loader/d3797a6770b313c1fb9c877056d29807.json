{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSong() {\n  _s();\n\n  const [title, newTitle] = useState('Let me see...');\n  const [songList, updateSongList] = useState([]);\n  useEffect(() => {\n    console.log('using effect');\n    fetch(`http://localhost:5000/record/`).then(response => response.ok ? response.json() : window.alert(`An error occurred: ${response.statusText}`)).then(result => updateSongList(result));\n  }, []);\n\n  function chooseSong() {\n    const eligibleSongs = songList.map(song => {\n      if (song.count < 4) {\n        return song;\n      }\n    }).filter(el => el != undefined);\n\n    if (eligibleSongs.length > 0) {\n      let index = Math.floor(Math.random() * eligibleSongs.length);\n      let ti = eligibleSongs[index].name;\n      newTitle(ti);\n      console.log(songList[ti]); // songList[ti].count+=1;\n\n      console.log(ti + \" \" + songList[ti].count); //  updateDataBase(title or songList?)//?????????????????????\n\n      return;\n    } //     else{\n    //       for(let song in songList){\n    //         song.count=0\n    //       }\n    // //  updateDataBase(title or songList?)//?????????????????????\n    //        // updateFetchSong(p=>p+1)\n    //     }\n    //\n    // },[fetchSong])\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"next\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getSong\",\n      onClick: chooseSong,\n      children: \"What Song to Play Next?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSong, \"EpB434AxDFJy7WKVGTEmN+iDq8w=\");\n\n_c = CurrentSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSong\");","map":{"version":3,"names":["React","useState","useEffect","CurrentSong","title","newTitle","songList","updateSongList","console","log","fetch","then","response","ok","json","window","alert","statusText","result","chooseSong","eligibleSongs","map","song","count","filter","el","undefined","length","index","Math","floor","random","ti","name"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function CurrentSong(){\n  const [title,newTitle] = useState('Let me see...')\n  const [songList,updateSongList] = useState([])\n\nuseEffect(()=>{\n    console.log('using effect')\n    fetch(`http://localhost:5000/record/`)\n      .then(response=>\n          response.ok?response.json():window.alert(`An error occurred: ${response.statusText}`)\n        )\n      .then(result =>updateSongList(result))\n    },[]\n)\n\n  function chooseSong(){\n    const eligibleSongs = songList.map(song=>{\n        if(song.count<4){\n          return song;\n        }\n      }).filter(el=>el!=undefined)\n\n    if(eligibleSongs.length > 0){\n      let index = Math.floor(Math.random() * eligibleSongs.length)\n      let ti = eligibleSongs[index].name\n\n      newTitle(ti)\n      console.log(songList[ti])\n      // songList[ti].count+=1;\n      console.log(ti + \" \" + songList[ti].count)\n    //  updateDataBase(title or songList?)//?????????????????????\n        return;\n      }\n  //     else{\n  //       for(let song in songList){\n  //         song.count=0\n  //       }\n  // //  updateDataBase(title or songList?)//?????????????????????\n  //        // updateFetchSong(p=>p+1)\n  //     }\n  //\n  // },[fetchSong])\n}\n  return(\n    <div className = 'next'>\n      <button id='getSong' onClick = {chooseSong}>What Song to Play Next?</button>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,WAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,eAAD,CAAjC;EACA,MAAM,CAACK,QAAD,EAAUC,cAAV,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EAEFC,SAAS,CAAC,MAAI;IACVM,OAAO,CAACC,GAAR,CAAY,cAAZ;IACAC,KAAK,CAAE,+BAAF,CAAL,CACGC,IADH,CACQC,QAAQ,IACVA,QAAQ,CAACC,EAAT,GAAYD,QAAQ,CAACE,IAAT,EAAZ,GAA4BC,MAAM,CAACC,KAAP,CAAc,sBAAqBJ,QAAQ,CAACK,UAAW,EAAvD,CAFlC,EAIGN,IAJH,CAIQO,MAAM,IAAGX,cAAc,CAACW,MAAD,CAJ/B;EAKC,CAPI,EAOH,EAPG,CAAT;;EAUE,SAASC,UAAT,GAAqB;IACnB,MAAMC,aAAa,GAAGd,QAAQ,CAACe,GAAT,CAAaC,IAAI,IAAE;MACrC,IAAGA,IAAI,CAACC,KAAL,GAAW,CAAd,EAAgB;QACd,OAAOD,IAAP;MACD;IACF,CAJmB,EAIjBE,MAJiB,CAIVC,EAAE,IAAEA,EAAE,IAAEC,SAJE,CAAtB;;IAMA,IAAGN,aAAa,CAACO,MAAd,GAAuB,CAA1B,EAA4B;MAC1B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,aAAa,CAACO,MAAzC,CAAZ;MACA,IAAIK,EAAE,GAAGZ,aAAa,CAACQ,KAAD,CAAb,CAAqBK,IAA9B;MAEA5B,QAAQ,CAAC2B,EAAD,CAAR;MACAxB,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAAC0B,EAAD,CAApB,EAL0B,CAM1B;;MACAxB,OAAO,CAACC,GAAR,CAAYuB,EAAE,GAAG,GAAL,GAAW1B,QAAQ,CAAC0B,EAAD,CAAR,CAAaT,KAApC,EAP0B,CAQ5B;;MACI;IACD,CAjBgB,CAkBrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD;;EACC,oBACE;IAAK,SAAS,EAAG,MAAjB;IAAA,wBACE;MAAQ,EAAE,EAAC,SAAX;MAAqB,OAAO,EAAIJ,UAAhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKf;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAhDuBD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}