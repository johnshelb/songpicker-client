{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSong() {\n  _s();\n\n  const [title, newTitle] = useState('Let me see...');\n  const [songList, updateSongList] = useState([]);\n  const [fetchSong, updateFetchSong] = useState([]);\n\n  function addToFetchSong() {\n    console.log('upping fetchSong');\n    fetchSong.push(1);\n    console.log(fetchSong);\n  }\n\n  useEffect(() => {\n    console.log('using effect'); // fetch(`http://localhost:5000/record/`)\n    //   .then(response=>{if (!response.ok) {\n    //     const message = `An error occurred: ${response.statusText}`;\n    //     window.alert(message);\n    //     return;\n    // }else{\n    //\n    //   updateSongList(response.json())\n    // }\n  }); //continue the process as long as there is at least 1 song with fewer than 4 plays\n  //   const eligibleSongs = songList.map(song=>{\n  //       if(song.count<4){\n  //         return song;\n  //       }\n  //     }).filter(el=>el!=undefined)\n  //     console.log(eligibleSongs)\n  //\n  //   if(eligibleSongs.length > 0){\n  //     let index = Math.floor(Math.random() * eligibleSongs.length)\n  //     let ti = eligibleSongs[index].name\n  //\n  //   //  updateDataBase(title or songList?)//?????????????????????\n  //       newTitle(ti)\n  //       console.log('okay, I am returning')\n  //       return;\n  //     }else{\n  //       for(let song in songList){\n  //         song.count=0\n  //       }\n  // //  updateDataBase(title or songList?)//?????????????????????\n  //        // getSong()\n  //     }\n  //\n  // },[fetchSong.length])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"next\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getSong\",\n      onClick: addToFetchSong,\n      children: \"What Song to Play Next?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSong, \"+mTILuJXkgygxElu/JhNm5atEno=\");\n\n_c = CurrentSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSong\");","map":{"version":3,"names":["React","useState","useEffect","CurrentSong","title","newTitle","songList","updateSongList","fetchSong","updateFetchSong","addToFetchSong","console","log","push"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function CurrentSong(){\n  const [title,newTitle] = useState('Let me see...')\n  const [songList,updateSongList] = useState([])\n  const [fetchSong,updateFetchSong]=useState([]);\n  function addToFetchSong(){\n    console.log('upping fetchSong')\n    fetchSong.push(1);\n    console.log(fetchSong)\n  }\nuseEffect(()=>{\n    console.log('using effect')\n    // fetch(`http://localhost:5000/record/`)\n    //   .then(response=>{if (!response.ok) {\n    //     const message = `An error occurred: ${response.statusText}`;\n    //     window.alert(message);\n    //     return;\n    // }else{\n    //\n    //   updateSongList(response.json())\n    // }\n  })\n  //continue the process as long as there is at least 1 song with fewer than 4 plays\n  //   const eligibleSongs = songList.map(song=>{\n  //       if(song.count<4){\n  //         return song;\n  //       }\n  //     }).filter(el=>el!=undefined)\n  //     console.log(eligibleSongs)\n  //\n  //   if(eligibleSongs.length > 0){\n  //     let index = Math.floor(Math.random() * eligibleSongs.length)\n  //     let ti = eligibleSongs[index].name\n  //\n  //   //  updateDataBase(title or songList?)//?????????????????????\n  //       newTitle(ti)\n  //       console.log('okay, I am returning')\n  //       return;\n  //     }else{\n  //       for(let song in songList){\n  //         song.count=0\n  //       }\n  // //  updateDataBase(title or songList?)//?????????????????????\n  //        // getSong()\n  //     }\n  //\n  // },[fetchSong.length])\n\n  return(\n    <div className = 'next'>\n      <button id='getSong' onClick={ addToFetchSong }>What Song to Play Next?</button>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,WAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,eAAD,CAAjC;EACA,MAAM,CAACK,QAAD,EAAUC,cAAV,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACO,SAAD,EAAWC,eAAX,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;EACA,SAASS,cAAT,GAAyB;IACvBC,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACAJ,SAAS,CAACK,IAAV,CAAe,CAAf;IACAF,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EACD;;EACHN,SAAS,CAAC,MAAI;IACVS,OAAO,CAACC,GAAR,CAAY,cAAZ,EADU,CAEV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAXM,CAAT,CATqC,CAqBnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAG,MAAjB;IAAA,wBACE;MAAQ,EAAE,EAAC,SAAX;MAAqB,OAAO,EAAGF,cAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKN;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GArDuBD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}