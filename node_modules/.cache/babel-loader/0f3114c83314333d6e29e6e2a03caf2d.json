{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import AddSong from './AddSong';\n// import FullList from './FullList';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CurrentSong() {\n  _s();\n\n  const [title, newTitle] = useState('Let me see...');\n  const [songList, updateSongList] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/record/`).then(response => response.ok ? response.json() : window.alert(`An error occurred: ${response.statusText}`)).then(result => updateSongList(result));\n  }, [title]);\n\n  async function chooseSong() {\n    const eligibleSongs = songList.map(song => {\n      if (song.count < 4) {\n        return song;\n      }\n    }).filter(el => el !== undefined);\n\n    if (eligibleSongs.length > 0) {\n      let index = Math.floor(Math.random() * eligibleSongs.length);\n      let ti = eligibleSongs[index].name;\n      eligibleSongs[index].count += 1;\n      fetch(`http://localhost:5000/update/${eligibleSongs[index]._id}`, {\n        method: 'POST',\n        body: JSON.stringify(eligibleSongs[index]),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(newTitle(ti));\n      return;\n    } else {\n      for (let song in songList) {\n        songList[song].count = 0;\n        await fetch(`http://localhost:5000/update/${songList[song]._id}`, {\n          method: 'POST',\n          body: JSON.stringify(songList[song]),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n\n      newTitle('resetting...');\n      chooseSong();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"getSong\",\n        onClick: chooseSong,\n        children: \"What Song to Play Next?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CurrentSong, \"EpB434AxDFJy7WKVGTEmN+iDq8w=\");\n\n_c = CurrentSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSong\");","map":{"version":3,"names":["React","useState","useEffect","CurrentSong","title","newTitle","songList","updateSongList","fetch","then","response","ok","json","window","alert","statusText","result","chooseSong","eligibleSongs","map","song","count","filter","el","undefined","length","index","Math","floor","random","ti","name","_id","method","body","JSON","stringify","headers"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import AddSong from './AddSong';\n// import FullList from './FullList';\n\nexport default function CurrentSong(){\n  const [title,newTitle] = useState('Let me see...')\n  const [songList,updateSongList] = useState([])\n\n  useEffect(()=>{\n      fetch(`http://localhost:5000/record/`)\n        .then(response=>response.ok?response.json():window.alert(`An error occurred: ${response.statusText}`)\n      )\n      .then(result => updateSongList(result))\n    },[title]\n  )\n\n  async function chooseSong(){\n    const eligibleSongs = songList.map(song=>{\n        if(song.count<4){\n          return song;\n        }\n      }).filter(el=>el!==undefined)\n\n    if(eligibleSongs.length > 0){\n      let index = Math.floor(Math.random() * eligibleSongs.length)\n      let ti = eligibleSongs[index].name\n      eligibleSongs[index].count+=1;\n      fetch(`http://localhost:5000/update/${eligibleSongs[index]._id}`,{\n        method:'POST',\n        body:JSON.stringify(eligibleSongs[index]),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      .then(newTitle(ti))\n      return;\n    }else{\n      for(let song in songList){\n        songList[song].count=0\n        await fetch(`http://localhost:5000/update/${songList[song]._id}`,{\n          method:'POST',\n          body:JSON.stringify(songList[song]),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n        })\n      }\n      newTitle('resetting...')\n      chooseSong()\n    }\n  }\n  return(\n    <>\n      <div className = 'next'>\n        <button id='getSong' onClick = { chooseSong }>What Song to Play Next?</button>\n        <h1>{title}</h1>\n        </div>\n    </>\n\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;;;;AAEA,eAAe,SAASC,WAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,eAAD,CAAjC;EACA,MAAM,CAACK,QAAD,EAAUC,cAAV,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EAEAC,SAAS,CAAC,MAAI;IACVM,KAAK,CAAE,+BAAF,CAAL,CACGC,IADH,CACQC,QAAQ,IAAEA,QAAQ,CAACC,EAAT,GAAYD,QAAQ,CAACE,IAAT,EAAZ,GAA4BC,MAAM,CAACC,KAAP,CAAc,sBAAqBJ,QAAQ,CAACK,UAAW,EAAvD,CAD9C,EAGCN,IAHD,CAGMO,MAAM,IAAIT,cAAc,CAACS,MAAD,CAH9B;EAID,CALM,EAKL,CAACZ,KAAD,CALK,CAAT;;EAQA,eAAea,UAAf,GAA2B;IACzB,MAAMC,aAAa,GAAGZ,QAAQ,CAACa,GAAT,CAAaC,IAAI,IAAE;MACrC,IAAGA,IAAI,CAACC,KAAL,GAAW,CAAd,EAAgB;QACd,OAAOD,IAAP;MACD;IACF,CAJmB,EAIjBE,MAJiB,CAIVC,EAAE,IAAEA,EAAE,KAAGC,SAJC,CAAtB;;IAMA,IAAGN,aAAa,CAACO,MAAd,GAAuB,CAA1B,EAA4B;MAC1B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,aAAa,CAACO,MAAzC,CAAZ;MACA,IAAIK,EAAE,GAAGZ,aAAa,CAACQ,KAAD,CAAb,CAAqBK,IAA9B;MACAb,aAAa,CAACQ,KAAD,CAAb,CAAqBL,KAArB,IAA4B,CAA5B;MACAb,KAAK,CAAE,gCAA+BU,aAAa,CAACQ,KAAD,CAAb,CAAqBM,GAAI,EAA1D,EAA4D;QAC/DC,MAAM,EAAC,MADwD;QAE/DC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAelB,aAAa,CAACQ,KAAD,CAA5B,CAF0D;QAG/DW,OAAO,EAAE;UACP,gBAAgB;QADT;MAHsD,CAA5D,CAAL,CAOC5B,IAPD,CAOMJ,QAAQ,CAACyB,EAAD,CAPd;MAQA;IACD,CAbD,MAaK;MACH,KAAI,IAAIV,IAAR,IAAgBd,QAAhB,EAAyB;QACvBA,QAAQ,CAACc,IAAD,CAAR,CAAeC,KAAf,GAAqB,CAArB;QACA,MAAMb,KAAK,CAAE,gCAA+BF,QAAQ,CAACc,IAAD,CAAR,CAAeY,GAAI,EAApD,EAAsD;UAC/DC,MAAM,EAAC,MADwD;UAE/DC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe9B,QAAQ,CAACc,IAAD,CAAvB,CAF0D;UAG/DiB,OAAO,EAAE;YACP,gBAAgB;UADT;QAHsD,CAAtD,CAAX;MAOD;;MACDhC,QAAQ,CAAC,cAAD,CAAR;MACAY,UAAU;IACX;EACF;;EACD,oBACE;IAAA,uBACE;MAAK,SAAS,EAAG,MAAjB;MAAA,wBACE;QAAQ,EAAE,EAAC,SAAX;QAAqB,OAAO,EAAKA,UAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAKb;MAAL;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AASD;;GAxDuBD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}