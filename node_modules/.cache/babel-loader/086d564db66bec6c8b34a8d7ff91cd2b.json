{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa_coding/songpicker_mern/songpicker/src/components/AddSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddSong(_ref) {\n  _s();\n\n  let {\n    setDisplay\n  } = _ref;\n  const [text, changeText] = useState(\"\");\n\n  function onChange(e) {\n    changeText(prev => e.target.value);\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const inputEl = document.getElementById('addedSong');\n    let songTitle = inputEl.value;\n    const newSong = {\n      name: songTitle,\n      count: 0\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newSong)\n    }).catch(error => {\n      window.alert(error);\n    });\n    changeText(\"\");\n    inputEl.focus();\n    setDisplay(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addSong\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"addedSong\",\n        type: \"text\",\n        value: text,\n        onChange: onChange,\n        placeholder: \"type title here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addButton\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddSong, \"s62dxVJo6JIBFsiUOcjWeAjPnxU=\");\n\n_c = AddSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSong\");","map":{"version":3,"names":["React","useState","AddSong","setDisplay","text","changeText","onChange","e","prev","target","value","onSubmit","preventDefault","inputEl","document","getElementById","songTitle","newSong","name","count","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","focus"],"sources":["/Users/johnshelby/Desktop/aaa_coding/songpicker_mern/songpicker/src/components/AddSong.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function AddSong({setDisplay}){\n  const [text,changeText] = useState(\"\")\n\n  function onChange(e){\n    changeText(prev=>e.target.value)\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const inputEl = document.getElementById('addedSong')\n    let songTitle= inputEl.value\n    const newSong = {\n      name:songTitle,\n      count:0\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newSong),\n    })\n    .catch(error => {\n      window.alert(error);\n    });\n    changeText(\"\")\n    inputEl.focus()\n    setDisplay(true)\n  }\n\n  return(\n    <div className = 'addSong'>\n      <h1>Add a Song</h1>\n      <form onSubmit = {onSubmit}>\n        <input id='addedSong' type='text' value = {text} onChange = {onChange} placeholder ='type title here'/>\n        <button className='addButton'>Submit</button>\n      </form>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,OAAT,OAA8B;EAAA;;EAAA,IAAb;IAACC;EAAD,CAAa;EAC3C,MAAM,CAACC,IAAD,EAAMC,UAAN,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;EAEA,SAASK,QAAT,CAAkBC,CAAlB,EAAoB;IAClBF,UAAU,CAACG,IAAI,IAAED,CAAC,CAACE,MAAF,CAASC,KAAhB,CAAV;EACD;;EACD,eAAeC,QAAf,CAAwBJ,CAAxB,EAA2B;IACzBA,CAAC,CAACK,cAAF,GADyB,CAEzB;;IACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;IACA,IAAIC,SAAS,GAAEH,OAAO,CAACH,KAAvB;IACA,MAAMO,OAAO,GAAG;MACdC,IAAI,EAACF,SADS;MAEdG,KAAK,EAAC;IAFQ,CAAhB;IAIA,MAAMC,KAAK,CAAC,kCAAD,EAAqC;MAC9CC,MAAM,EAAE,MADsC;MAE9CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFqC;MAK9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;IALwC,CAArC,CAAL,CAOLS,KAPK,CAOCC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAP,CAAaF,KAAb;IACD,CATK,CAAN;IAUAtB,UAAU,CAAC,EAAD,CAAV;IACAQ,OAAO,CAACiB,KAAR;IACA3B,UAAU,CAAC,IAAD,CAAV;EACD;;EAED,oBACE;IAAK,SAAS,EAAG,SAAjB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAIQ,QAAlB;MAAA,wBACE;QAAO,EAAE,EAAC,WAAV;QAAsB,IAAI,EAAC,MAA3B;QAAkC,KAAK,EAAIP,IAA3C;QAAiD,QAAQ,EAAIE,QAA7D;QAAuE,WAAW,EAAE;MAApF;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,SAAS,EAAC,WAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAvCuBJ,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}