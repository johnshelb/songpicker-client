{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrentSong() {\n  _s();\n\n  const [title, newTitle] = useState('Let me see...');\n  const [songList, updateSongList] = useState([]);\n  const [fetchSong, updateFetchSong] = useState(0);\n\n  function addToFetchSong() {\n    console.log('upping fetchSong');\n    updateFetchSong(p => p + 1);\n    console.log(fetchSong);\n  }\n\n  useEffect(() => {\n    console.log('using effect');\n    fetch(`http://localhost:5000/record/`).then(response => {\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      } else {\n        updateSongList(response.json());\n      }\n    }); //continue the process as long as there is at least 1 song with fewer than 4 plays\n\n    const eligibleSongs = songList.map(song => {\n      if (song.count < 4) {\n        return song;\n      }\n    }).filter(el => el != undefined);\n    console.log(eligibleSongs);\n\n    if (eligibleSongs.length > 0) {\n      let index = Math.floor(Math.random() * eligibleSongs.length);\n      let ti = eligibleSongs[index].name; //  updateDataBase(title or songList?)//?????????????????????\n\n      newTitle(ti);\n      console.log('okay, I am returning');\n      return;\n    } else {\n      for (let song in songList) {\n        song.count = 0;\n      } //  updateDataBase(title or songList?)//?????????????????????\n      // getSong()\n\n    }\n  }, [fetchSong]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"next\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"getSong\",\n      onClick: addToFetchSong,\n      children: \"What Song to Play Next?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrentSong, \"mRck3y3a35tuPLr7hI5aTiJELbw=\");\n\n_c = CurrentSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentSong\");","map":{"version":3,"names":["React","useState","useEffect","CurrentSong","title","newTitle","songList","updateSongList","fetchSong","updateFetchSong","addToFetchSong","console","log","p","fetch","then","response","ok","message","statusText","window","alert","json","eligibleSongs","map","song","count","filter","el","undefined","length","index","Math","floor","random","ti","name"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/components/CurrentSong.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function CurrentSong(){\n  const [title,newTitle] = useState('Let me see...')\n  const [songList,updateSongList] = useState([])\n  const [fetchSong,updateFetchSong]=useState(0);\n  function addToFetchSong(){\n    console.log('upping fetchSong')\n    updateFetchSong(p=> p+1)\n    console.log(fetchSong)\n  }\nuseEffect(()=>{\n    console.log('using effect')\n    fetch(`http://localhost:5000/record/`)\n      .then(response=>{if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n    }else{\n\n      updateSongList(response.json())\n    }\n  })\n  //continue the process as long as there is at least 1 song with fewer than 4 plays\n    const eligibleSongs = songList.map(song=>{\n        if(song.count<4){\n          return song;\n        }\n      }).filter(el=>el!=undefined)\n      console.log(eligibleSongs)\n\n    if(eligibleSongs.length > 0){\n      let index = Math.floor(Math.random() * eligibleSongs.length)\n      let ti = eligibleSongs[index].name\n\n    //  updateDataBase(title or songList?)//?????????????????????\n        newTitle(ti)\n        console.log('okay, I am returning')\n        return;\n      }else{\n        for(let song in songList){\n          song.count=0\n        }\n  //  updateDataBase(title or songList?)//?????????????????????\n         // getSong()\n      }\n\n  },[fetchSong])\n\n  return(\n    <div className = 'next'>\n      <button id='getSong' onClick={ addToFetchSong }>What Song to Play Next?</button>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,WAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,eAAD,CAAjC;EACA,MAAM,CAACK,QAAD,EAAUC,cAAV,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACO,SAAD,EAAWC,eAAX,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;;EACA,SAASS,cAAT,GAAyB;IACvBC,OAAO,CAACC,GAAR,CAAY,kBAAZ;IACAH,eAAe,CAACI,CAAC,IAAGA,CAAC,GAAC,CAAP,CAAf;IACAF,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EACD;;EACHN,SAAS,CAAC,MAAI;IACVS,OAAO,CAACC,GAAR,CAAY,cAAZ;IACAE,KAAK,CAAE,+BAAF,CAAL,CACGC,IADH,CACQC,QAAQ,IAAE;MAAC,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QACjC,MAAMC,OAAO,GAAI,sBAAqBF,QAAQ,CAACG,UAAW,EAA1D;QACAC,MAAM,CAACC,KAAP,CAAaH,OAAb;QACA;MACH,CAJkB,MAId;QAEHX,cAAc,CAACS,QAAQ,CAACM,IAAT,EAAD,CAAd;MACD;IACF,CATC,EAFU,CAYZ;;IACE,MAAMC,aAAa,GAAGjB,QAAQ,CAACkB,GAAT,CAAaC,IAAI,IAAE;MACrC,IAAGA,IAAI,CAACC,KAAL,GAAW,CAAd,EAAgB;QACd,OAAOD,IAAP;MACD;IACF,CAJmB,EAIjBE,MAJiB,CAIVC,EAAE,IAAEA,EAAE,IAAEC,SAJE,CAAtB;IAKElB,OAAO,CAACC,GAAR,CAAYW,aAAZ;;IAEF,IAAGA,aAAa,CAACO,MAAd,GAAuB,CAA1B,EAA4B;MAC1B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,aAAa,CAACO,MAAzC,CAAZ;MACA,IAAIK,EAAE,GAAGZ,aAAa,CAACQ,KAAD,CAAb,CAAqBK,IAA9B,CAF0B,CAI5B;;MACI/B,QAAQ,CAAC8B,EAAD,CAAR;MACAxB,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACA;IACD,CARH,MAQO;MACH,KAAI,IAAIa,IAAR,IAAgBnB,QAAhB,EAAyB;QACvBmB,IAAI,CAACC,KAAL,GAAW,CAAX;MACD,CAHE,CAIT;MACO;;IACF;EAEJ,CApCM,EAoCL,CAAClB,SAAD,CApCK,CAAT;EAsCE,oBACE;IAAK,SAAS,EAAG,MAAjB;IAAA,wBACE;MAAQ,EAAE,EAAC,SAAX;MAAqB,OAAO,EAAGE,cAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKN;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GArDuBD,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}