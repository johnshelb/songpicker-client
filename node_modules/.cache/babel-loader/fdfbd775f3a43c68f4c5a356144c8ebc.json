{"ast":null,"code":"var _jsxFileName = \"/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CurrentSong from './components/CurrentSong';\nimport AddSong from './components/AddSong';\nimport FullList from './components/FullList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [allSongs, updateAllSongs] = useState([]);\n  const [display, setDisplay] = useState(false);\n  const [text, changeText] = useState(\"\");\n\n  function onChange(e) {\n    changeText(prev => e.target.value);\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const inputEl = document.getElementById('addedSong');\n    let songTitle = inputEl.value;\n    const newSong = {\n      name: songTitle,\n      count: 0\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newSong)\n    }).catch(error => {\n      window.alert(error);\n    });\n    changeText(\"\");\n    inputEl.focus();\n    setDisplay(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CurrentSong, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddSong, {\n      onSubmit: onSubmit,\n      onChange: onChange,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullList, {\n      allSongs: allSongs,\n      updateAllSongs: updateAllSongs,\n      display: display,\n      setDisplay: setDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6HJ1y0UXj6uqkbbGwOFjLDcbHqM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CurrentSong","AddSong","FullList","App","allSongs","updateAllSongs","display","setDisplay","text","changeText","onChange","e","prev","target","value","onSubmit","preventDefault","inputEl","document","getElementById","songTitle","newSong","name","count","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","focus"],"sources":["/Users/johnshelby/Desktop/aaa coding/songpicker_mern/songpicker/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CurrentSong from './components/CurrentSong';\nimport AddSong from './components/AddSong';\nimport FullList from './components/FullList';\n\nexport default function App(){\n  const [allSongs,updateAllSongs] = useState([])\n  const [display, setDisplay] = useState(false)\n  const [text,changeText] = useState(\"\")\n  function onChange(e){\n    changeText(prev=>e.target.value)\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const inputEl = document.getElementById('addedSong')\n    let songTitle= inputEl.value\n    const newSong = {\n      name:songTitle,\n      count:0\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newSong),\n    })\n    .catch(error => {\n      window.alert(error);\n    });\n    changeText(\"\")\n    inputEl.focus()\n    setDisplay(true)\n\n  }\n  return(\n    <>\n      <CurrentSong />\n      <AddSong onSubmit = {onSubmit} onChange = {onChange} text={text}/>\n      <FullList allSongs={allSongs} updateAllSongs={updateAllSongs} display={display} setDisplay={setDisplay}/>\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,eAAe,SAASC,GAAT,GAAc;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAUC,cAAV,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACS,IAAD,EAAMC,UAAN,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;EACA,SAASW,QAAT,CAAkBC,CAAlB,EAAoB;IAClBF,UAAU,CAACG,IAAI,IAAED,CAAC,CAACE,MAAF,CAASC,KAAhB,CAAV;EACD;;EACD,eAAeC,QAAf,CAAwBJ,CAAxB,EAA2B;IACzBA,CAAC,CAACK,cAAF,GADyB,CAEzB;;IACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;IACA,IAAIC,SAAS,GAAEH,OAAO,CAACH,KAAvB;IACA,MAAMO,OAAO,GAAG;MACdC,IAAI,EAACF,SADS;MAEdG,KAAK,EAAC;IAFQ,CAAhB;IAIA,MAAMC,KAAK,CAAC,kCAAD,EAAqC;MAC9CC,MAAM,EAAE,MADsC;MAE9CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFqC;MAK9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;IALwC,CAArC,CAAL,CAOLS,KAPK,CAOCC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAP,CAAaF,KAAb;IACD,CATK,CAAN;IAUAtB,UAAU,CAAC,EAAD,CAAV;IACAQ,OAAO,CAACiB,KAAR;IACA3B,UAAU,CAAC,IAAD,CAAV;EAED;;EACD,oBACE;IAAA,wBACE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,QAAQ,EAAIQ,QAArB;MAA+B,QAAQ,EAAIL,QAA3C;MAAqD,IAAI,EAAEF;IAA3D;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,QAAD;MAAU,QAAQ,EAAEJ,QAApB;MAA8B,cAAc,EAAEC,cAA9C;MAA8D,OAAO,EAAEC,OAAvE;MAAgF,UAAU,EAAEC;IAA5F;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;;GAtCuBJ,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}